version: '3.8'

services:

  client:
    build:
      context: ./client
    ports:
      - "3000:80"

  user-service:
    build:
      context: ./user-service
    ports:
      - "30080:30080"
    depends_on:
      - mysql

  image-service:
    build:
      context: ./image-service
    ports:
      - "30081:30081"
    depends_on:
      - mysql
      - minio

  rating-service:
    build:
      context: ./rating-service
    ports:
      - "8008:8008"
    depends_on:
      - mongodb

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "30191:30191"

  service-registry:
    build:
      context: ./service-registry
    ports:
      - "30761:30761"

  config-server:
    build:
      context: ./config-server
    ports:
      - "30888:30888"

  minio:
    image: minio/minio
    ports:
      - "32769:9000"
      - "32768:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    ports:
      - "8036:3306"

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
    ports:
      - "27017:27017"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "22181:2181"
